<html lang='en'>

<head>
    {{> head}}
    <style>
        .form-container {
            margin-bottom: 20px;
        }

        .text-entries {
            margin-bottom: 20px;
        }

        .text-entry {
            position: relative;
            padding: 15px;
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-bottom: 15px;
        }

        .remove-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: #dc3545;
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            resize: vertical;
            min-height: 80px;
            font-family: inherit;
        }

        .btn-add {
            background-color: #28a745;
            color: white;
            max-width: 200px;
            margin: 0 auto;
            display: block;
        }

        .btn-add:hover {
            background-color: #218838;
        }

        .submit-container {
            text-align: center;
            margin-top: 20px;
        }

        .loading {
            display: none;
            text-align: center;
            padding: 20px;
            font-style: italic;
            color: #666;
        }

        .result-container {
            display: none;
            margin-top: 20px;
            padding: 15px;
            background-color: #d4edda;
            border: 1px solid #c3e6cb;
            border-radius: 4px;
            color: #155724;
        }

        .error-container {
            display: none;
            margin-top: 20px;
            padding: 15px;
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
            border-radius: 4px;
            color: #721c24;
        }
    </style>
</head>

<body>
    <div class='container'>
        <!-- Navigation menu -->
        {{> navmenu}}

        <h1>AI Video Generation</h1>

        <div class='form-container'>
            <p>Enter text prompts to generate video content. Each text will be used to create a segment in the final
                video.</p>

            <div class='text-entries' id='textEntries'>
                <!-- Text entries will be added here dynamically -->
                <div class='text-entry'>
                    <button class='remove-btn' onclick='removeTextEntry(this)'>×</button>
                    <div class='form-group'>
                        <label>Text Prompt:</label>
                        <textarea class='text-input' placeholder='Enter text to generate a video segment...'></textarea>
                    </div>
                </div>
            </div>

            <button class='btn btn-add' onclick='addTextEntry()'>Add Another Prompt</button>

            <div class='submit-container'>
                <button id='generateBtn' class='btn btn-primary' onclick='generateVideo()'>Generate Video</button>
            </div>
        </div>

        <div id='loadingIndicator' class='loading'>
            Generating your video... This may take several minutes. Please wait.
        </div>

        <div id='resultContainer' class='result-container'>
            <h3>Success!</h3>
            <p>Your video generation task has been created successfully. The video will be processed in the background.
            </p>
            <p>You can check the home page later to see your generated video.</p>
        </div>

        <div id='errorContainer' class='error-container'>
            <h3>Error</h3>
            <p id='errorMessage'></p>
        </div>
    </div>

    <script>
        function addTextEntry() {
            const textEntries = document.getElementById('textEntries');
            const newEntry = document.createElement('div');
            newEntry.className = 'text-entry';
            newEntry.innerHTML = `
          <button class="remove-btn" onclick="removeTextEntry(this)">×</button>
          <div class="form-group">
            <label>Text Prompt:</label>
            <textarea class="text-input" placeholder="Enter text to generate a video segment..."></textarea>
          </div>
        `;
            textEntries.appendChild(newEntry);
        }

        function removeTextEntry(button) {
            const entries = document.querySelectorAll('.text-entry');
            // Don't remove if it's the only entry
            if (entries.length > 1) {
                const entry = button.parentElement;
                entry.remove();
            } else {
                alert('You need at least one text prompt.');
            }
        }

        async function generateVideo() {
            // Get all text inputs
            const textInputs = document.querySelectorAll('.text-input');
            const texts = Array.from(textInputs)
                .map(input => input.value.trim())
                .filter(text => text);

            if (texts.length === 0) {
                alert('Please enter at least one text prompt.');
                return;
            }

            // Show loading indicator and hide results
            document.getElementById('loadingIndicator').style.display = 'block';
            document.getElementById('resultContainer').style.display = 'none';
            document.getElementById('errorContainer').style.display = 'none';
            document.getElementById('generateBtn').disabled = true;

            try {
                const response = await fetch('/generate-video', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        texts,
                        options: {
                            voiceId: "Joanna",
                            outputFormat: "mp3",
                            languageCode: "en-US",
                            engine: "standard"
                        },
                    }),
                });

                const result = await response.json();

                if (response.ok) {
                    document.getElementById('resultContainer').style.display = 'block';
                } else {
                    throw new Error(result.message || 'Failed to generate video');
                }
            } catch (error) {
                document.getElementById('errorMessage').textContent = `Error: ${error.message}`;
                document.getElementById('errorContainer').style.display = 'block';
                console.error('Error generating video:', error);
            } finally {
                // Hide loading indicator and enable button
                document.getElementById('loadingIndicator').style.display = 'none';
                document.getElementById('generateBtn').disabled = false;
            }
        }
    </script>
</body>

</html>