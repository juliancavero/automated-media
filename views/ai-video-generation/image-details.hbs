<html lang='es'>

<head>
  {{> head}}
  <style>
    .image-container {
      margin: 30px auto;
      max-width: 800px;
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 8px;
      background-color: #f9f9f9;
    }

    .image-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      padding-bottom: 10px;
      border-bottom: 1px solid #eee;
    }

    .image-display {
      text-align: center;
      margin: 20px 0;
    }

    .image-display img {
      max-width: 100%;
      max-height: 500px;
      border-radius: 4px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .image-details {
      margin-top: 20px;
    }

    .detail-row {
      display: flex;
      margin-bottom: 10px;
    }

    .detail-label {
      font-weight: bold;
      width: 120px;
    }

    .detail-value {
      flex: 1;
    }

    .prompt-container {
      margin-top: 20px;
      padding: 15px;
      background-color: #f3f3f3;
      border-radius: 4px;
      border: 1px solid #e0e0e0;
    }

    .actions {
      margin-top: 30px;
      text-align: center;
    }

    .actions button {
      margin: 0 5px;
    }

    .danger-zone {
      margin-top: 30px;
      padding: 15px;
      border: 1px solid #dc3545;
      border-radius: 4px;
      background-color: #f8d7da;
    }

    .danger-zone h4 {
      color: #dc3545;
    }

    .btn-delete {
      background-color: #dc3545;
      border-color: #dc3545;
    }

    .btn-delete:hover {
      background-color: #c82333;
      border-color: #bd2130;
    }

    .btn-danger {
      margin-left: 5px;
      background-color: #dc3545;
      border-color: #dc3545;
    }

    .btn-danger:hover {
      background-color: #c82333;
      border-color: #bd2130;
    }
  </style>
</head>

<body>
  <div class='container'>
    {{> languageselector}}
    {{> navmenu}}

    <div class='image-container'>
      <div class='image-header'>
        <h1>Image Details</h1>
        <a href='/images/view/list' class='btn btn-outline-primary'>Back to List</a>
      </div>

      <div class='image-display'>
        <img src='{{#if image.url}}{{image.url}}{{else}}/images/{{image._id}}{{/if}}' alt='{{image.text}}'>
      </div>

      <div class='image-details'>
        <div class='detail-row'>
          <div class='detail-label'>ID:</div>
          <div class='detail-value'>{{image._id}}</div>
        </div>
        <div class='detail-row'>
          <div class='detail-label'>Status:</div>
          <div class='detail-value'>{{image.status}}</div>
        </div>
        <div class='detail-row'>
          <div class='detail-label'>MIME Type:</div>
          <div class='detail-value'>{{image.mimeType}}</div>
        </div>
        <div class='detail-row'>
          <div class='detail-label'>Created:</div>
          <div class='detail-value'>{{formatDate image.createdAt}}</div>
        </div>
        {{#if image.url}}
        <div class='detail-row'>
          <div class='detail-label'>URL:</div>
          <div class='detail-value'>{{image.url}}</div>
        </div>
        {{/if}}
        {{#if image.publicId}}
        <div class='detail-row'>
          <div class='detail-label'>Public ID:</div>
          <div class='detail-value'>{{image.publicId}}</div>
        </div>
        {{/if}}
        {{#if image.videoId}}
        <div class='detail-row'>
          <div class='detail-label'>Video ID:</div>
          <div class='detail-value'>
            <a href='/videos/list/{{image.videoId}}'>{{image.videoId}}</a>
          </div>
        </div>
        {{/if}}
        <div class='detail-row'>
          <div class='detail-label'>Order:</div>
          <div class='detail-value'>{{image.order}}</div>
        </div>
      </div>

      {{#if image.text}}
      <div class='prompt-container'>
        <h4>Text/Prompt:</h4>
        <p>{{image.text}}</p>
      </div>
      {{/if}}

      <div class='actions'>
        <button class='btn btn-primary' onclick='downloadImage("{{image._id}}")'>Download</button>
        <button class='btn btn-warning' onclick='regenerateImage("{{image._id}}")'>Regenerate Image</button>
        <button class='btn btn-danger' onclick='markImageAsFailed("{{image._id}}")'>Mark as Failed</button>
      </div>

      <div class="danger-zone">
        <h4>Danger Zone</h4>
        <p>Once you delete this image, there is no going back. Please be certain.</p>
        <button class='btn btn-delete' onclick='deleteImage("{{image._id}}")'>Delete Image</button>
      </div>
    </div>
  </div>

  <script>
    function downloadImage(id) {
      const a = document.createElement('a');
      a.href = `/images/${id}`;
      a.download = `image-${id}.png`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
    }

    function regenerateImage(id) {
      if (confirm('Are you sure you want to regenerate this image? This will overwrite the current image.')) {
        fetch(`/images/${id}/regenerate`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              alert('Image regeneration has been queued. The page will reload in a few seconds.');
              setTimeout(() => location.reload(), 3000);
            } else {
              alert(`Failed to regenerate image: ${data.message}`);
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert(`An error occurred: ${error.message}`);
          });
      }
    }

    async function deleteImage(id) {
      if (!confirm('Are you sure you want to delete this image? This action cannot be undone.')) {
        return;
      }

      try {
        const response = await fetch(`/images/${id}`, {
          method: 'DELETE'
        });

        const result = await response.json();

        if (result.success) {
          alert('Image deleted successfully');
          window.location.href = '/images/list';
        } else {
          alert(`Failed to delete: ${result.message || 'Unknown error'}`);
        }
      } catch (error) {
        alert(`Error: ${error.message}`);
      }
    }

    async function markImageAsFailed(id) {
      if (!confirm('Are you sure you want to mark this image as failed? This may affect how it\'s processed in the system.')) {
        return;
      }

      try {
        const response = await fetch(`/images/${id}/mark-error`, {
          method: 'POST'
        });

        const result = await response.json();

        if (result.success) {
          alert('Image marked as failed successfully');
          window.location.reload();
        } else {
          alert(`Failed to mark as failed: ${result.message || 'Unknown error'}`);
        }
      } catch (error) {
        alert(`Error: ${error.message}`);
      }
    }
  </script>
</body>

</html>