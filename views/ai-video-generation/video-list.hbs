<html lang='es'>

<head>
  {{> head}}
  <style>
    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 20px;
    }

    th,
    td {
      padding: 12px 15px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    th {
      background-color: #f2f2f2;
      font-weight: bold;
    }

    tr:hover {
      background-color: #f9f9f9;
    }

    .description {
      max-width: 400px;
      overflow: hid;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .date {
      white-space: nowrap;
    }

    .url {
      max-width: 200px;
      overflow: hid;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .pending {
      color: #999;
      font-style: italic;
    }

    .empty-message {
      text-align: center;
      padding: 30px;
      color: #666;
      font-style: italic;
    }

    .clickable-row {
      transition: background-color 0.2s;
    }

    .clickable-row:hover {
      background-color: #e9f0f7;
      cursor: pointer;
    }

    .action-link {
      color: #0275d8;
      text-decoration: none;
    }

    .action-link:hover {
      text-decoration: underline;
    }

    .filter-container {
      margin-bottom: 20px;
      padding: 15px;
      background-color: #f8f9fa;
      border-radius: 4px;
      border: 1px solid #dee2e6;
    }

    .filter-form {
      display: flex;
      gap: 10px;
      align-items: flex-end;
    }

    .filter-form .form-group {
      flex-grow: 1;
      margin-bottom: 0;
    }

    .filter-form label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
    }

    .filter-info {
      margin-top: 10px;
      padding: 8px;
      background-color: #e9ecef;
      border-radius: 4px;
      font-style: italic;
    }

    .clear-filter {
      margin-left: 10px;
      color: #0275d8;
      text-decoration: none;
    }

    .clear-filter:hover {
      text-decoration: underline;
    }

    /* Pagination Styles */
    .pagination-container {
      display: flex;
      justify-content: center;
      margin: 20px 0;
    }

    .pagination {
      display: flex;
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .pagination li {
      margin: 0 5px;
    }

    .pagination li a,
    .pagination li span {
      display: block;
      padding: 8px 12px;
      text-decoration: none;
      color: #0275d8;
      border: 1px solid #ddd;
      border-radius: 4px;
    }

    .pagination li.active a {
      background-color: #0275d8;
      color: white;
      border-color: #0275d8;
    }

    .pagination li.disabled span {
      color: #6c757d;
      pointer-events: none;
      cursor: not-allowed;
    }

    .pagination li a:hover:not(.active) {
      background-color: #ddd;
    }

    .pagination-info {
      text-align: center;
      color: #6c757d;
      margin-bottom: 10px;
      font-style: italic;
    }

    /* Add status color styles */
    .status-uploaded {
      background-color: #fff9c4;
      /* Light yellow pastel */
    }

    /* Responsive table styles */
    @media screen and (max-width: 767px) {

      table,
      thead,
      tbody,
      th,
      td,
      tr {
        display: block;
      }

      .hid {
        display: none;
      }

      thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
      }

      tr {
        border: 1px solid #ccc;
        margin-bottom: 15px;
        border-radius: 4px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      }

      td {
        border: none;
        border-bottom: 1px solid #eee;
        position: relative;
        padding-left: 50%;
        min-height: 30px;
      }

      td:before {
        position: absolute;
        top: 12px;
        left: 12px;
        width: 45%;
        padding-right: 10px;
        white-space: nowrap;
        font-weight: bold;
        content: attr(data-label);
      }

      .clickable-row td:last-child {
        border-bottom: none;
      }

      .description {
        max-width: 100%;
      }

      .url {
        max-width: 100%;
      }
    }

    .action-buttons {
      margin: 15px 0;
      display: flex;
      gap: 10px;
    }

    .action-button {
      padding: 8px 15px;
      background-color: #f0f0f0;
      border: 1px solid #ddd;
      border-radius: 4px;
      cursor: pointer;
      font-size: 14px;
      transition: all 0.2s;
    }

    .action-button:hover {
      background-color: #e0e0e0;
    }

    .action-button.primary {
      background-color: #0275d8;
      color: white;
      border-color: #0275d8;
    }

    .action-button.primary:hover {
      background-color: #025aa5;
    }

    #actionResponseMessage {
      margin: 10px 0;
      padding: 10px;
      border-radius: 4px;
      display: none;
    }

    .success-message {
      background-color: #dff0d8;
      color: #3c763d;
      border: 1px solid #d6e9c6;
    }

    .error-message {
      background-color: #f2dede;
      color: #a94442;
      border: 1px solid #ebccd1;
    }

    .video-type-selector {
      display: flex;
      gap: 10px;
    }

    .video-type-btn {
      display: flex;
      align-items: center;
      gap: 5px;
      padding: 8px 12px;
      border: 1px solid #ddd;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    .video-type-btn.active {
      background-color: #0275d8;
      color: white;
      border-color: #0275d8;
    }

    .video-type-btn:hover:not(.active) {
      background-color: #f0f0f0;
    }
  </style>
</head>

<body>
  <div class='container'>
    {{> languageselector}}
    <!-- Navigation menu -->
    {{> navmenu}}

    <h1>Video Generations</h1>

    <!-- Filter section -->
    <div class="filter-container">
      <form id="seriesFilterForm" class="filter-form">
        <div class="form-group">
          <label for="typeFilter" style="font-size: 0.9rem;">Filter by Type</label>
          <div class="video-type-selector" style="margin-bottom: 5px;">
            <label class="video-type-btn {{#if (eq currentTypeFilter 'basic' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="type" value="basic" {{#if (eq currentTypeFilter 'basic' )}}checked{{/if}}
                style="display:none;">
              <i class="fas fa-film"></i>
              Basic
            </label>
            <label class="video-type-btn {{#if (eq currentTypeFilter 'real' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="type" value="real" {{#if (eq currentTypeFilter 'real' )}}checked{{/if}}
                style="display:none;">
              <i class="fas fa-video"></i>
              Real
            </label>
            <label class="video-type-btn {{#if (eq currentTypeFilter 'hidden_beasts' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="type" value="hidden_beasts" {{#if (eq currentTypeFilter 'hidden_beasts'
                )}}checked{{/if}} style="display:none;">
              <i class="fas fa-dragon"></i>
              Hidden Beasts
            </label>
            <label class="video-type-btn {{#if (eq currentTypeFilter 'aliens' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="type" value="aliens" {{#if (eq currentTypeFilter 'aliens' )}}checked{{/if}}
                style="display:none;">
              <i class="fas fa-user-astronaut"></i>
              Aliens
            </label>
          </div>
          <div class="video-type-selector">
            <label class="video-type-btn {{#if (eq currentTypeFilter 'hidden_files' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="type" value="hidden_files" {{#if (eq currentTypeFilter 'hidden_files'
                )}}checked{{/if}} style="display:none;">
              <i class="fas fa-folder-open"></i>
              Hidden Files
            </label>
            <label class="video-type-btn {{#if (eq currentTypeFilter 'first_person' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="type" value="first_person" {{#if (eq currentTypeFilter 'first_person'
                )}}checked{{/if}} style="display:none;">
              <i class="fas fa-user-alt"></i>
              First Person
            </label>
            <label class="video-type-btn {{#if (eq currentTypeFilter 'censored' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="type" value="censored" {{#if (eq currentTypeFilter 'censored' )}}checked{{/if}}
                style="display:none;">
              <i class="fas fa-ban"></i>
              Censored
            </label>
            <label class="video-type-btn {{#if (eq currentTypeFilter '' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="type" value="" {{#if (eq currentTypeFilter '' )}}checked{{/if}}
                style="display:none;">
              <i class="fas fa-times-circle"></i>
              All Types
            </label>
          </div>
        </div>

        <div class="form-group">
          <label for="statusFilter" style="font-size: 0.9rem;">Filter by Status</label>
          <div class="video-type-selector">
            <label class="video-type-btn {{#if (eq currentStatusFilter 'pending' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="status" value="pending" {{#if (eq currentStatusFilter 'pending'
                )}}checked{{/if}} style="display:none;">
              <i class="fas fa-clock"></i>
              Pending
            </label>
            <label class="video-type-btn {{#if (eq currentStatusFilter 'finished' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="status" value="finished" {{#if (eq currentStatusFilter 'finished'
                )}}checked{{/if}} style="display:none;">
              <i class="fas fa-check-circle"></i>
              Finished
            </label>
            <label class="video-type-btn {{#if (eq currentStatusFilter 'uploaded' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="status" value="uploaded" {{#if (eq currentStatusFilter 'uploaded'
                )}}checked{{/if}} style="display:none;">
              <i class="fas fa-upload"></i>
              Uploaded
            </label>
            <label class="video-type-btn {{#if (eq currentStatusFilter '' )}}active{{/if}}"
              style="padding: 5px 8px; font-size: 0.8rem;">
              <input type="radio" name="status" value="" {{#if (eq currentStatusFilter '' )}}checked{{/if}}
                style="display:none;">
              <i class="fas fa-times-circle"></i>
              All Status
            </label>
          </div>
        </div>
        <div class="form-group">
          <label for="notRelatedFilter">Not Related</label>
          <input type="checkbox" id="notRelatedFilter" name="notRelated" {{#if currentRelatedFilter}} checked="true"
            {{/if}}>
        </div>
      </form>

      {{#if currentSeriesFilter}}
      <div class="filter-info">
        Currently showing videos in series: <strong>{{currentSeriesFilter}}</strong>
        {{#if currentTypeFilter}}and type: <strong>{{currentTypeFilter}}</strong>{{/if}}
        {{#if currentStatusFilter}}and status: <strong>{{currentStatusFilter}}</strong>{{/if}}
        <a href="/videos/list" class="clear-filter">Clear filter</a>
      </div>
      {{else if currentTypeFilter}}
      <div class="filter-info">
        Currently showing videos of type: <strong>{{currentTypeFilter}}</strong>
        {{#if currentStatusFilter}}and status: <strong>{{currentStatusFilter}}</strong>{{/if}}
        <a href="/videos/list" class="clear-filter">Clear filter</a>
      </div>
      {{else if currentStatusFilter}}
      <div class="filter-info">
        Currently showing videos with status: <strong>{{currentStatusFilter}}</strong>
        <a href="/videos/list" class="clear-filter">Clear filter</a>
      </div>
      {{/if}}
    </div>

    {{#if videoGenerations.length}}
    <table>
      <thead>
        <tr>
          <th>Texto</th>
          <th class="hid">Fecha de Creación</th>
          <th class="hid">URL</th>
          <th class="hid">Estado</th>
          <th>Language Copy</th>
        </tr>
      </thead>
      <tbody>
        {{#each videoGenerations}}
        <tr class="clickable-row {{#if (eq status 'uploaded')}}status-uploaded{{/if}}" data-href="/videos/list/{{_id}}">
          <td class='description' data-label="Texto">{{truncate texts.[0] 40}}</td>
          <td class='date hid' data-label="Fecha de Creación">{{formatDate createdAt}}</td>
          <td class='url hid' data-label="URL">
            {{#if url}}
            <a href='{{url}}' target='_blank'>Ver Video</a>
            {{else}}
            <span class='pending'>...pendiente</span>
            {{/if}}
          </td>
          <td class="hid" data-label="Estado">{{status}}</td>
          <td>
            {{#if lang}}
            <button class="btn btn-sm generate-language-copy-btn" data-video-id="{{_id}}"
              style="padding: 0.25rem 0.5rem; font-size: 0.8rem;">
              {{#if (eq lang 'es')}}
              <span style='margin-left: 5px;'>🇪🇸</span>
              {{/if}}
              {{#if (eq lang 'en')}}
              <span style='margin-left: 5px;'>🇬🇧</span>
              {{/if}}
            </button>
            {{else}}
            <span>N/A</span>
            {{/if}}
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>

    <!-- Pagination -->
    {{#if pagination}}
    <div class="pagination-info">
      Showing {{videoGenerations.length}} of {{pagination.totalItems}} videos
      (Page {{pagination.currentPage}} of {{pagination.totalPages}})
    </div>
    <div class="pagination-container">
      <ul class="pagination">
        {{#if pagination.hasPrev}}
        <li>
          <a class="pagination-link"
            href="/videos/list?page=1{{#if currentSeriesFilter}}&series={{currentSeriesFilter}}{{/if}}{{#if currentTypeFilter}}&type={{currentTypeFilter}}{{/if}}{{#if currentStatusFilter}}&status={{currentStatusFilter}}{{/if}}">First</a>
        </li>
        <li>
          <a class="pagination-link"
            href="/videos/list?page={{pagination.prevPage}}{{#if currentSeriesFilter}}&series={{currentSeriesFilter}}{{/if}}{{#if currentTypeFilter}}&type={{currentTypeFilter}}{{/if}}{{#if currentStatusFilter}}&status={{currentStatusFilter}}{{/if}}">Previous</a>
        </li>
        {{else}}
        <li class="disabled">
          <span>First</span>
        </li>
        <li class="disabled">
          <span>Previous</span>
        </li>
        {{/if}}

        {{#each (generatePageNumbers pagination.currentPage pagination.totalPages)}}
        <li {{#if (eq this ../pagination.currentPage)}}class="active" {{/if}}>
          <a class="pagination-link"
            href="/videos/list?page={{this}}{{#if ../currentSeriesFilter}}&series={{../currentSeriesFilter}}{{/if}}{{#if ../currentTypeFilter}}&type={{../currentTypeFilter}}{{/if}}{{#if ../currentStatusFilter}}&status={{../currentStatusFilter}}{{/if}}">{{this}}</a>
        </li>
        {{/each}}

        {{#if pagination.hasNext}}
        <li>
          <a class="pagination-link"
            href="/videos/list?page={{pagination.nextPage}}{{#if currentSeriesFilter}}&series={{currentSeriesFilter}}{{/if}}{{#if currentTypeFilter}}&type={{currentTypeFilter}}{{/if}}{{#if currentStatusFilter}}&status={{currentStatusFilter}}{{/if}}">Next</a>
        </li>
        <li>
          <a class="pagination-link"
            href="/videos/list?page={{pagination.totalPages}}{{#if currentSeriesFilter}}&series={{currentSeriesFilter}}{{/if}}{{#if currentTypeFilter}}&type={{currentTypeFilter}}{{/if}}{{#if currentStatusFilter}}&status={{currentStatusFilter}}{{/if}}">Last</a>
        </li>
        {{else}}
        <li class="disabled">
          <span>Next</span>
        </li>
        <li class="disabled">
          <span>Last</span>
        </li>
        {{/if}}
      </ul>
    </div>
    {{/if}}
    {{else}}
    <div class='empty-message'>
      <p>No hay generaciones de video en este momento{{#if currentSeriesFilter}} con la serie
        "{{currentSeriesFilter}}"{{/if}}.</p>
    </div>
    {{/if}}
  </div>

  <!-- Add JavaScript to make the entire row clickable -->
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const rows = document.querySelectorAll('.clickable-row');
      rows.forEach(row => {
        row.addEventListener('click', function (event) {
          // Don't follow row link if clicking on an existing link
          if (event.target.tagName === 'A') return;

          const href = this.dataset.href;
          if (href) {
            window.location.href = href;
          }
        });
      });

      // Add handlers for filters
      const typeFilterRadios = document.querySelectorAll('input[name="type"]');
      const statusFilterRadios = document.querySelectorAll('input[name="status"]');
      const notRelatedFilter = document.getElementById('notRelatedFilter');

      function applyTypeAndStatusFilter() {
        const type = document.querySelector('input[name="type"]:checked').value;
        const status = document.querySelector('input[name="status"]:checked').value;
        const notRelated = notRelatedFilter.checked;
        const lang = localStorage.getItem('lang') || 'es';

        let url = '/videos/list?lang=' + lang + '&';
        if (type) url += `type=${encodeURIComponent(type)}&`;
        if (status) url += `status=${encodeURIComponent(status)}&`;
        if (notRelated) url += `notRelated=true&`;

        window.location.href = url.endsWith('&') ? url.slice(0, -1) : url;
      }

      // Apply type and status filters automatically on change
      notRelatedFilter.addEventListener('change', applyTypeAndStatusFilter);
      typeFilterRadios.forEach(radio => {
        radio.addEventListener('change', applyTypeAndStatusFilter);
      });
      statusFilterRadios.forEach(radio => {
        radio.addEventListener('change', applyTypeAndStatusFilter);
      });

      // Generate language copy button functionality
      const generateLanguageCopyButtons = document.querySelectorAll('.generate-language-copy-btn');

      async function generateLanguageCopy(videoId) {
        const lang = localStorage.getItem('lang');
        const generateLanguageCopyBtn = document.querySelector(`.generate-language-copy-btn[data-video-id="${videoId}"]`);

        try {
          generateLanguageCopyBtn.disabled = true;
          generateLanguageCopyBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';

          const response = await fetch(`/videos/${videoId}/generate-language-copy`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ lang })
          });

          const result = await response.json();

          if (result.success) {
            // Show success message
            generateLanguageCopyBtn.innerHTML = '✓';
            // Create and dispatch a custom event
            const event = new CustomEvent('toast', {
              detail: {
                message: 'Language copy generated successfully!',
                type: 'success'
              }
            });
            document.dispatchEvent(event);
          } else {
            generateLanguageCopyBtn.disabled = false;
            generateLanguageCopyBtn.innerHTML = 'Error';
            // Show error message
            const event = new CustomEvent('toast', {
              detail: {
                message: result.message || 'Failed to generate language copy',
                type: 'danger'
              }
            });
            document.dispatchEvent(event);
          }
        } catch (error) {
          generateLanguageCopyBtn.disabled = false;
          generateLanguageCopyBtn.innerHTML = 'Error';
          // Show error message
          const event = new CustomEvent('toast', {
            detail: {
              message: error.message,
              type: 'danger'
            }
          });
          document.dispatchEvent(event);
        }
      }

      generateLanguageCopyButtons.forEach(button => {
        button.addEventListener('click', async function (event) {
          event.stopPropagation(); // Prevent row click
          const videoId = this.dataset.videoId;
          await generateLanguageCopy(videoId);
        });
      });
    });
  </script>
</body>

</html>